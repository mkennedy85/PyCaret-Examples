[project]
name = "pycaret-examples"
version = "0.1.0"
description = "PyCaret Tutorial Collection for CMPE-255 Data Mining"
requires-python = ">=3.10,<3.12"

dependencies = [
    # Core PyCaret with extras (excluding 'models' and 'tuner' - not available in 3.3.2)
    "pycaret[analysis,mlops,parallel]==3.3.2",
    # Jupyter environment
    "jupyter>=1.0.0",
    "notebook>=6.5.0,<8.0.0",
    "ipykernel>=6.0.0",
    "ipython>=8.0.0",
    "ipywidgets>=8.0.0",
    # Visualization
    "matplotlib>=3.5.0,<3.8.0",
    "seaborn>=0.11.0,<0.13.0",
    "plotly>=5.0.0",
    "kaleido>=0.2.0",
    "umap-learn>=0.5.0",  # For UMAP plots
    # Data handling
    "pandas>=1.5.0,<2.2.0",
    "numpy>=1.23.0,<2.0.0",
    # ML core libraries
    "scikit-learn>=1.3.0,<1.5.0",
    "scipy>=1.10.0,<1.14.0",
    # Boosting libraries (exclude CatBoost due to macOS Python 3.11 incompatibility)
    "xgboost>=1.7.0",
    "lightgbm>=3.0.0",
    # Model interpretation
    "shap>=0.42.0",
    # Hyperparameter optimization
    "optuna>=3.0.0",
    "scikit-optimize>=0.9.0",
    # Time series - all required dependencies
    "statsmodels>=0.14.0",
    "pmdarima>=2.0.0",
    "prophet>=1.1.0",
    "sktime>=0.24.0",
    "tbats>=1.1.0",
    "dask[dataframe]==2024.8.0",  # Pin to version compatible with sktime and pandas
    # Association rules
    "mlxtend>=0.22.0",
    # Anomaly detection
    "pyod>=1.0.0",
    # Model deployment
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "gradio>=3.0.0",
    # Model persistence
    "joblib>=1.3.0",
    "cloudpickle>=2.2.0",
    # Kaggle
    "kaggle>=1.7.4.5",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
]
advanced = [
    # Advanced features (optional, not required for basic tutorials)
    "optuna-integration[sklearn]>=3.0.0",  # For Optuna hyperparameter tuning
    "papermill>=2.4.0",  # For automated notebook execution with parameters
]

[tool.black]
line-length = 100
target-version = ['py310']

[tool.isort]
profile = "black"
line_length = 100

[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
py-modules = []

[tool.setuptools.packages.find]
where = ["."]
include = []
exclude = ["notebooks*", "datasets*", "outputs*", "videos*", "scripts*"]
